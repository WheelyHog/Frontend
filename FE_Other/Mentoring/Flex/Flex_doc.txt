Flexbox, также известный как CSS Flexible Box Layout, является методом разметки, который помогает упорядочить элементы на веб-странице, делая их более адаптивными и гибкими. В этом конспекте мы рассмотрим основные концепции и свойства Flexbox.

Основные концепции
Flexbox использует контейнер, внутри которого находятся дочерние элементы, которые нужно расположить на странице. Контейнеру присваивается свойство display: flex, чтобы указать, что мы хотим использовать Flexbox для расположения элементов внутри контейнера.

Затем мы используем свойства и значения, чтобы управлять расположением дочерних элементов внутри контейнера. Все дочерние элементы контейнера становятся flex-элементами и управляются через свойства, заданные для контейнера.

Основными свойствами Flexbox являются:

flex-direction: определяет направление основной оси (main axis) контейнера, которое определяет, как элементы располагаются внутри контейнера.
justify-content: определяет выравнивание элементов вдоль основной оси контейнера.
align-items: определяет выравнивание элементов вдоль поперечной оси (cross axis) контейнера.
flex-wrap: определяет, переноситься ли содержимое контейнера на новую строку, если не помещается на одной строке.
align-content: определяет выравнивание множества строк, если содержимое контейнера переносится на несколько строк.
Основные свойства
flex-direction
Свойство flex-direction определяет направление основной оси контейнера и может иметь следующие значения:

row: элементы располагаются горизонтально слева направо (по умолчанию).
row-reverse: элементы располагаются горизонтально справа налево.
column: элементы располагаются вертикально сверху вниз.
column-reverse: элементы располагаются вертикально снизу вверх.


.container {
  display: flex;
  flex-direction: row;
}


justify-content
Свойство justify-content определяет выравнивание элементов вдоль основной оси контейнера и может иметь следующие значения:

flex-start: элементы выравниваются по началу основной оси контейнера.
flex-end: элементы выравниваются по концу основной оси контейнера.

center: элементы выравниваются по центру основной оси контейнера.
space-between: элементы выравниваются таким образом, чтобы расстояние между ними было равномерно.
space-around: элементы выравниваются таким образом, чтобы расстояние между ними и вокруг них было равномерно.
space-evenly: элементы выравниваются таким образом, чтобы расстояние между ними, вокруг них и между крайними элементами было равномерно.


.container {
  display: flex;
  justify-content: center;
}


align-items
Свойство align-items определяет выравнивание элементов вдоль поперечной оси контейнера и может иметь следующие значения:

stretch: элементы растягиваются, чтобы занять всю высоту контейнера (по умолчанию).
flex-start: элементы выравниваются по началу поперечной оси контейнера.
flex-end: элементы выравниваются по концу поперечной оси контейнера.
center: элементы выравниваются по центру поперечной оси контейнера.
baseline: элементы выравниваются по базовой линии контейнера (обычно это линия, на которой находятся текстовые элементы).


.container {
  display: flex;
  align-items: center;
}


flex-wrap
Свойство flex-wrap определяет, переносится ли содержимое контейнера на новую строку, если не помещается на одной строке, и может иметь следующие значения:

nowrap: содержимое не переносится на новую строку (по умолчанию).
wrap: содержимое переносится на новую строку, если не помещается на одной строке.
wrap-reverse: содержимое переносится на новую строку в обратном порядке.


.container {
  display: flex;
  flex-wrap: wrap;
}


align-content
Свойство align-content определяет выравнивание множества строк, если содержимое контейнера переносится на несколько строк, и может иметь следующие значения:

stretch: строки растягиваются, чтобы занять всю высоту контейнера (по умолчанию).
flex-start: строки выравниваются по началу поперечной оси контейнера.
flex-end: строки выравниваются по концу поперечной оси контейнера.
center: строки выравниваются по центру поперечной оси контейнера.

space-between: строки выравниваются таким образом, чтобы расстояние между ними было равномерно.
space-around: строки выравниваются таким образом, чтобы расстояние между ними и вокруг них было равномерно.
space-evenly: строки выравниваются таким образом, чтобы расстояние между ними, вокруг них и между крайними строками было равномерно.


.container {
  display: flex;
  flex-wrap: wrap;
  align-content: center;
}


order
Свойство order определяет порядок расположения элементов в контейнере и принимает целочисленные значения. По умолчанию значение равно 0. Чем меньше значение, тем раньше элемент будет расположен в контейнере.



.item {
  order: 1;
}
flex-grow
Свойство flex-grow определяет, как распределить свободное пространство между элементами контейнера и может принимать положительные числовые значения. Чем больше значение, тем больше свободного пространства будет выделено для элемента.



.item {
  flex-grow: 1;
}


flex-shrink
Свойство flex-shrink определяет, как уменьшить размер элемента, если не хватает места на контейнере и может принимать положительные числовые значения. Чем больше значение, тем больше элемент будет уменьшаться в размере.


.item {
  flex-shrink: 1;
}


flex-basis
Свойство flex-basis определяет базовый размер элемента и может быть установлен в пикселях, процентах или ключевых словах auto или content. По умолчанию значение равно auto, что означает, что размер элемента будет определен его содержимым.


.item {
  flex-basis: 50%;
}


flex
Свойство flex является сокращением для свойств flex-grow, flex-shrink и flex-basis. Оно позволяет задать эти свойства в одной строке.


.item {
  flex: 1 1 50%;
}


align-self
Свойство align-self определяет выравнивание элемента вдоль поперечной оси контейнера и переопределяет значение свойства align-items для этого элемента.


.item {
  align-self: center;
}